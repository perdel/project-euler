"""
Project Euler Problem 2
=======================

Each new term in the Fibonacci sequence is generated by adding the
previous two terms. By starting with 1 and 2, the first 10 terms will be:

                  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

Find the sum of all the even-valued terms in the sequence which do not
exceed four million.
"""

from typing import List


def fib_even(n: int) -> List:
    fib = [0, 1]
    f_even = []
    while True:
        f = fib[-1] + fib[-2]
        if f > n:
            break
        else:
            fib.append(f)
        if f % 2 == 0:
            f_even.append(f)
    return f_even


def solution(n: int) -> int:
    even = fib_even(n)
    return sum(even)


if __name__ == "__main__":
    print(solution(4000000))
